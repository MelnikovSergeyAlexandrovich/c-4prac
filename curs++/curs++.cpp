// recursion++.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <Windows.h> 

using namespace std;

void factorial(int&);  // Объявляем метод с ссылочным целочисленным значением до его вызова для исправной работы 

void input() //создаем метод input для ввода значения  
{
    int num;  
    cout << "Введите целое число, для нахождения факториала" << endl; //объявляем переменную, просим пользователя ввести число, читаем введенную переменную.
    cin >> num;
    factorial(num);//Далее происходит вызов функции для факторила с введенным числом, которое является аргументом 
}
void factorial(int& num) 
{
    int choose;  //обЪявление переменных
    int facto = 1;
    for (int i = 1; i <= num; i++) //цикл для нахождения факториала 
    {
        facto *= i;
         
    }
    const int& const_facto = facto; // создаем константу для того, чтобы вернуть значение по ссылке
    cout << "Факториал данного числа равен " << const_facto << endl;
    cout << "Введите единицу, если хотите продолжить. Для выхода введите любое другое число. \n"; //вывод факториала и вывод текста о том, стоит ли продолжить работу программы
    cin >> choose;
    if (choose == 1)
    {
        input(); // если пользователь ввел единицу, то программа продожает работать, в другом случае - работа программы прекращается 
    }
    else
    {
        exit(0);
    }
}

int main()
{
    SetConsoleCP(1251); // данные 2 строки нужны для правильной кодировки и для того, чтобы был возможен вывод русского языка 
    setlocale(LC_ALL, "Russian");
    input(); // вызов функции 
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
